# {{PROJECT_NAME}}

{{PROJECT_DESCRIPTION}}

## 概要

このプロジェクトは Model Context Protocol (MCP) サーバーの実装です。AIクライアント（Claude等）がツールやリソースにアクセスするためのサーバーを提供します。

## セットアップ

### 1. 依存関係のインストール
```bash
npm install
```

### 2. 環境変数の設定
```bash
cp .env.example .env
# .envファイルを必要に応じて編集
```

### 3. 開発サーバーの起動
```bash
npm run dev
```

## 開発

### 利用可能なスクリプト

- `npm run dev` - 開発モードでサーバー起動（ファイル変更時に自動再起動）
- `npm run build` - TypeScriptをJavaScriptにコンパイル
- `npm run start` - ビルドされたサーバーを起動
- `npm test` - テストを実行
- `npm run lint` - コードの静的解析
- `npm run lint:fix` - リンティングエラーの自動修正

### プロジェクト構造

```
src/
├── index.ts           # メインサーバー実装
├── tools/             # MCPツール実装
│   └── example-tool.ts
├── resources/         # MCPリソース実装
│   └── example-resource.ts
└── utils/
    └── logger.ts      # ログユーティリティ
```

### MCP機能の追加

#### 新しいツールの追加
1. `src/tools/` に新しいツールを実装
2. `src/index.ts` でツールを登録

#### 新しいリソースの追加
1. `src/resources/` に新しいリソースを実装
2. 必要に応じてリソースハンドラーを追加

## 使用方法

### MCPクライアントでの使用

Claude Codeなどのクライアントで使用する場合：

```json
{
  "mcpServers": {
    "{{PROJECT_NAME}}": {
      "command": "node",
      "args": ["dist/index.js"]
    }
  }
}
```

## ライセンス

MIT
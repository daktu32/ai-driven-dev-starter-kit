import { describe, it, expect, vi } from 'vitest'
import { mount } from '@vue/test-utils'
import BaseButton from '../../../components/ui/BaseButton.vue'

describe('BaseButton', () => {
  it('renders with default props', () => {
    const wrapper = mount(BaseButton, {
      slots: { default: 'Click me' }
    })
    
    const button = wrapper.find('button')
    expect(button.exists()).toBe(true)
    expect(button.text()).toBe('Click me')
    expect(button.classes()).toContain('btn-primary')
    expect(button.classes()).toContain('btn-md')
  })

  it('renders with custom variant', () => {
    const wrapper = mount(BaseButton, {
      props: { variant: 'secondary' },
      slots: { default: 'Secondary' }
    })
    
    const button = wrapper.find('button')
    expect(button.classes()).toContain('btn-secondary')
  })

  it('renders with custom size', () => {
    const wrapper = mount(BaseButton, {
      props: { size: 'lg' },
      slots: { default: 'Large' }
    })
    
    const button = wrapper.find('button')
    expect(button.classes()).toContain('btn-lg')
  })

  it('handles click events', async () => {
    const wrapper = mount(BaseButton, {
      slots: { default: 'Click me' }
    })
    
    const button = wrapper.find('button')
    await button.trigger('click')
    
    expect(wrapper.emitted('click')).toHaveLength(1)
  })

  it('supports disabled state', () => {
    const wrapper = mount(BaseButton, {
      props: { disabled: true },
      slots: { default: 'Disabled' }
    })
    
    const button = wrapper.find('button')
    expect(button.attributes('disabled')).toBeDefined()
    expect(button.classes()).toContain('btn-disabled')
  })

  it('supports different button types', () => {
    const wrapper = mount(BaseButton, {
      props: { type: 'submit' },
      slots: { default: 'Submit' }
    })
    
    const button = wrapper.find('button')
    expect(button.attributes('type')).toBe('submit')
  })

  it('applies outline variant correctly', () => {
    const wrapper = mount(BaseButton, {
      props: { variant: 'outline' },
      slots: { default: 'Outline' }
    })
    
    const button = wrapper.find('button')
    expect(button.classes()).toContain('btn-outline')
  })
})
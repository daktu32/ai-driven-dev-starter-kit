// Common types used throughout the application

export interface User {
  id: string
  name: string
  email: string
  avatar?: string
  createdAt: Date
  updatedAt: Date
}

export interface ApiResponse<T> {
  data: T
  message: string
  success: boolean
}

export interface PaginatedResponse<T> extends ApiResponse<T[]> {
  pagination: {
    page: number
    limit: number
    total: number
    totalPages: number
  }
}

export interface AppConfig {
  appName: string
  version: string
  apiUrl: string
  environment: 'development' | 'staging' | 'production'
}

// Component prop types
export interface BaseComponentProps {
  class?: string
}

// Form types
export interface FormField {
  name: string
  label: string
  type: 'text' | 'email' | 'password' | 'number' | 'textarea' | 'select'
  required?: boolean
  placeholder?: string
  options?: Array<{ value: string; label: string }>
}

// Navigation types
export interface NavItem {
  label: string
  path: string
  icon?: string
  children?: NavItem[]
}

// Vue-specific types
export interface VueComponentProps {
  [key: string]: any
}

export type ButtonVariant = 'primary' | 'secondary' | 'outline'
export type ButtonSize = 'sm' | 'md' | 'lg'